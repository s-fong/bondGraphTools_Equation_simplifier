f_10 = v_K

f_10 = f_49+f_50+f_51;
f_10 = F*f_132 + F*f_124 + F*f_128;
f_10 = F*(-f_134+f_135) + F*(-f_126+f_127) + F*(-f_130+f_131);
f_10 = F*(-(zK*f_311)+f_432-f_433) + F*(-(zK*f_277)+f_286+f_287) + F*(-(zK*f_298)+f_426-f_427);

f_10 = F*(-(zK*(v_K1+0)+z_rK1*v_gK1-(z_fK1*v_gK1)) + F*(-(zK*(v_K+0))+f_291+f_292+f_293+f_294+f_288+f_289+f_290) + F*(-(zK*(v_Kp+0))+(z_r_Kp*v_gKp)-(z_f_Kp*v_gKp));

I_K1 = F*(-(zK*(v_K1+0)+z_rK1*v_gK1-(z_fK1*v_gK1))
I_Kp = F*(-(zK*(v_Kp+0))+(z_r_Kp*v_gKp)-(z_f_Kp*v_gKp))


# my simplifying pythion script output
I_K1 = F*(-zK*v_K1 + z_rK1*v_gK1 - z_fK1*v_gK1)
I_Kp = F*(-zK*v_Kp+z_r_Kp*v_gKp-z_f_Kp*v_gKp)

            ... equivalent
            
            
Now track v_Ki, v_Ke, v_C_K1, v_O_K1  (same for Kp)

currently using:
        v_gK1 = kappa_gK1*(exp(Af_gK1/(R*T))-exp(Ar_gK1/(R*T)));
        v_C_K1 = -v_gK1;
        v_O_K1 = v_gK1-v_K1-v_K1;
        v_Ke = v_K1-nK*(v_K1-v_K1);
        full v_Ke=v_K-nK*(v_K-v_K)+v_K1-nK*(v_K1-v_K1)+v_Kp+v_LCC_K2+v_LCC_K1-v_R11-v_R12-1{dimensionless}/nK_stim*I_stim;

        v_Ki = -v_K1;

From Pan OG:
        v_C_K1 = -v_gK1;
        v_O_K1 = v_gK1-(v_K1-v_K1) # missing brackets to nullify v_K1 use
        v_Ke = f_9+f_14+f_17-f_32;
        v_Ke = (f_43+f_44+f_48) + (f_144+f_145) + (-f_232-f_233) - (1{dimensionless}/nK_stim*f_122);
        v_Ke = (v_K-nK*(v_K-v_K)) + (v_K1-(nK*(v_K1-v_K1))) + v_Kp + (v_LCC_K2+v_LCC_K1) + (-v_R11-v_R12) - (1{dimensionless}/nK_stim*f_122);
        
