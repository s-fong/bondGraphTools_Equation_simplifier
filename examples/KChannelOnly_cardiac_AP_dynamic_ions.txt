        var t: second {init: 0};
        var T: kelvin {init: 310};
        var K_00_K: per_fmol {init: 128.6868};
        var K_01_K: per_fmol {init: 22.3033};
        var K_10_K: per_fmol {init: 16.5777};
        var K_11_K: per_fmol {init: 2.8732};
        var K_20_K: per_fmol {init: 8.5423};
        var K_21_K: per_fmol {init: 1.4805};
        var K_H: per_fmol {init: 0.060187};
        var K_Ke: per_fmol {init: 0.059344};
        var K_Ki: per_fmol {init: 0.0080926};
        var K_P: per_fmol {init: 0.060187};
        var kappa_K: fmol_per_sec {init: 43947.9368};
        var kappa_X00: fmol_per_sec {init: 0.034684};
        var kappa_X01: fmol_per_sec {init: 0.20012};
        var kappa_X10: fmol_per_sec {init: 0.13462};
        var kappa_X11: fmol_per_sec {init: 0.77675};
        var kappa_b1: fmol_per_sec {init: 839.7697};
        var kappa_b2: fmol_per_sec {init: 1412.6324};
        var kappa_d000: fmol_per_sec {init: 369.4994};
        var kappa_d001: fmol_per_sec {init: 0.31102};
        var kappa_d010: fmol_per_sec {init: 9.1161};
        var kappa_d011: fmol_per_sec {init: 0.0076733};
        var kappa_d020: fmol_per_sec {init: 17.0469};
        var kappa_d021: fmol_per_sec {init: 0.014349};
        var kappa_f1_000: fmol_per_sec {init: 0.68071};
        var kappa_f1_001: fmol_per_sec {init: 0.00057297};
        var kappa_f1_100: fmol_per_sec {init: 3.3802};
        var kappa_f1_101: fmol_per_sec {init: 0.0028452};
        var kappa_f2_000: fmol_per_sec {init: 1.2467};
        var kappa_f2_001: fmol_per_sec {init: 0.0010494};
        var kappa_f2_100: fmol_per_sec {init: 6.1907};
        var kappa_f2_101: fmol_per_sec {init: 0.0052109};
        var kappa_f3_010: fmol_per_sec {init: 3502.1028};
        var kappa_f3_011: fmol_per_sec {init: 2.9478};
        var kappa_f3_110: fmol_per_sec {init: 17390.563};
        var kappa_f3_111: fmol_per_sec {init: 14.6381};
        var kappa_i00: fmol_per_sec {init: 7.7389};
        var kappa_i10: fmol_per_sec {init: 60.0742};
        var kappa_i20: fmol_per_sec {init: 116.5836};
        var nK: dimensionless {init: 0.5};
        var zK: dimensionless {init: 1};
        var z_fX: dimensionless {init: 0.51923};
        var z_fXi: dimensionless {init: 0};
        var z_fd: dimensionless {init: 2.1404};
        var z_ff1: dimensionless {init: -1.1495};
        var z_ff2: dimensionless {init: 0.72162};
        var z_ff3: dimensionless {init: 4.2933};
        var z_fh: dimensionless {init: -4.1892};
        var z_fj: dimensionless {init: -4.0381};
        var z_fm: dimensionless {init: 0.49541};
        var z_rX: dimensionless {init: -0.73169};
        var z_rXi: dimensionless {init: 0.83216};
        var z_rd: dimensionless {init: -2.1404};
        var z_rf1: dimensionless {init: 1.8993};
        var z_rf2: dimensionless {init: -0.52288};
        var z_rf3: dimensionless {init: 0};
        var z_rh: dimensionless {init: 1.2995};
        var z_rj: dimensionless {init: 1.4281};
        var z_rm: dimensionless {init: -2.4284};
        var I_stim: fA;
        var stimPeriod: second {init: 1};
        var stimDuration: second {init: 0.0001};
        var tPeriod: second;
        var x_Ke: fmol {init: 27.9828};
        var x_Ki: fmol {init: 5510};
        var x_H: fmol {init: 0.0030534};
        var x_P7: fmol {init: 0.0078543};
        var x_P_i: fmol {init: 15.0898};
        var x_P14: fmol {init: 0.0078543};
        var x_P15: fmol {init: 0.0078543};
        var x_P1: fmol {init: 0.0078543};
        var x_P2: fmol {init: 0.0078543};
        var x_P3: fmol {init: 0.0078543};
        var x_P4: fmol {init: 0.0078543};
        var x_P5: fmol {init: 0.0078543};
        var x_P6: fmol {init: 0.0078543};
        var x_P10: fmol {init: 0.0078543};
        var x_P11: fmol {init: 0.0078543};
        var x_P12: fmol {init: 0.0078543};
        var x_P13: fmol {init: 0.0078543};
        var x_P8: fmol {init: 0.0078543};
        var x_P9: fmol {init: 0.0078543};
        var x_S00_K: fmol {init: 4.5648e-06};
        var x_S01_K: fmol {init: 1.1412e-06};
        var x_S10_K: fmol {init: 2.2824e-06};
        var x_S11_K: fmol {init: 5.706e-07};
        var x_S20_K: fmol {init: 2.853e-07};
        var x_S21_K: fmol {init: 7.1325e-08};
        var v_Ke: fmol_per_sec;
        var v_Ki: fmol_per_sec;
        var v_P_i: fmol_per_sec;
        var v_K: fmol_per_sec;
        var v_S00_K: fmol_per_sec;
        var v_S01_K: fmol_per_sec;
        var v_S10_K: fmol_per_sec;
        var v_S11_K: fmol_per_sec;
        var v_S20_K: fmol_per_sec;
        var v_S21_K: fmol_per_sec;
        var v_X00: fmol_per_sec;
        var v_X01: fmol_per_sec;
        var v_X10: fmol_per_sec;
        var v_X11: fmol_per_sec;
        var v_i00: fmol_per_sec;
        var v_i10: fmol_per_sec;
        var v_i20: fmol_per_sec;
        mu_Ke = R*T*ln(K_Ke*x_Ke);
        mu_Ki = R*T*ln(K_Ki*x_Ki);
        mu_P_i = R*T*ln(K_P*x_P_i);
        mu_S00_K = R*T*ln(K_00_K*x_S00_K);
        mu_S01_K = R*T*ln(K_01_K*x_S01_K);
        mu_S10_K = R*T*ln(K_10_K*x_S10_K);
        mu_S11_K = R*T*ln(K_11_K*x_S11_K);
        mu_S20_K = R*T*ln(K_20_K*x_S20_K);
        mu_S21_K = R*T*ln(K_21_K*x_S21_K);
        tPeriod = t-floor(t/stimPeriod)*stimPeriod;
        v_X00 = kappa_X00*(exp(Af_X00/(R*T))-exp(Ar_X00/(R*T)));
        v_X01 = kappa_X01*(exp(Af_X01/(R*T))-exp(Ar_X01/(R*T)));
        v_X10 = kappa_X10*(exp(Af_X10/(R*T))-exp(Ar_X10/(R*T)));
        v_X11 = kappa_X11*(exp(Af_X11/(R*T))-exp(Ar_X11/(R*T)));
        v_i00 = kappa_i00*(exp(Af_i00/(R*T))-exp(Ar_i00/(R*T)));
        v_i10 = kappa_i10*(exp(Af_i10/(R*T))-exp(Ar_i10/(R*T)));
        v_i20 = kappa_i20*(exp(Af_i20/(R*T))-exp(Ar_i20/(R*T)));
Af_K = mu_Ki+(zK*((F*V_mem)))+mu_S21_K+(nK*mu_Ke);
Af_X00 = R*T*ln(K_00_K*x_S00_K)+z_fX*(F*V_mem);
Af_X01 = R*T*ln(K_01_K*x_S01_K)+z_fX*(F*V_mem);
Af_X10 = R*T*ln(K_10_K*x_S10_K)+z_fX*(F*V_mem);
Af_X11 = R*T*ln(K_11_K*x_S11_K)+z_fX*(F*V_mem);
Af_i00 = R*T*ln(K_00_K*x_S00_K)+z_fXi*(F*V_mem);
Af_i10 = R*T*ln(K_10_K*x_S10_K)+z_fXi*(F*V_mem);
Af_i20 = R*T*ln(K_20_K*x_S20_K)+z_fXi*(F*V_mem);
Am_K = (zK*((F*V_mem)));
Ar_K = mu_Ke+mu_S21_K+(nK*mu_Ke);
Ar_X00 = R*T*ln(K_10_K*x_S10_K)+z_rX*(F*V_mem);
Ar_X01 = R*T*ln(K_11_K*x_S11_K)+z_rX*(F*V_mem);
Ar_X10 = R*T*ln(K_20_K*x_S20_K)+z_rX*(F*V_mem);
Ar_X11 = R*T*ln(K_21_K*x_S21_K)+z_rX*(F*V_mem);
Ar_i00 = R*T*ln(K_01_K*x_S01_K)+z_rXi*(F*V_mem);
Ar_i10 = R*T*ln(K_11_K*x_S11_K)+z_rXi*(F*V_mem);
Ar_i20 = R*T*ln(K_21_K*x_S21_K)+z_rXi*(F*V_mem);
v_Ke = (v_K-(nK*((v_K-v_K))))+(v_K1-(nK*((v_K1-v_K1))))+v_Kp+v_LCC_K2+v_LCC_K1+(-(v_R11-v_R12)-(1{dimensionless}/nK_stim*I_stim));
v_Ki = -(v_K)-(v_K1)-(v_Kp)-(v_LCC_K1)-(v_LCC_K2)+v_R1+v_R2+(1{dimensionless}/nK_stim*I_stim);
v_P_i = v_R13;
v_S00_K = -(v_X00-v_i00);
v_S01_K = -(v_X01)+v_i00;
v_S10_K = (v_X00-v_X10-v_i10);
v_S11_K = (v_X01-v_X11)+v_i10;
v_S20_K = (v_X10-v_i20);
v_S21_K = v_X11+(v_i20-(v_K-v_K));
        ode(x_Ke, t) = v_Ke;
        ode(x_Ki, t) = v_Ki;
        ode(x_P_i, t) = 0{fmol_per_sec};
        ode(x_S00_K, t) = v_S00_K;
        ode(x_S01_K, t) = v_S01_K;
        ode(x_S10_K, t) = v_S10_K;
        ode(x_S11_K, t) = v_S11_K;
        ode(x_S20_K, t) = v_S20_K;
        ode(x_S21_K, t) = v_S21_K;
        v_K = sel
            case Am_K == 0{J_per_mol}:
                kappa_K*(exp(Af_K/(R*T))-exp(Ar_K/(R*T)));
            otherwise:
                kappa_K*Am_K/(R*T)/(exp(Am_K/(R*T))-1{dimensionless})*(exp(Af_K/(R*T))-exp(Ar_K/(R*T)));
        endsel;
